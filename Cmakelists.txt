cmake_minimum_required(VERSION 3.16)

set(CMAKE_CXX_STANDARD 20)

if(MSVC)
    set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Release>:Release>")
    set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()

set(CMAKE_INTERPROCEDURAL_OPTIMIZATION TRUE)

if(MSVC) 
    add_compile_options(/arch:AVX2) # Ensure SIMD optimizations take place
endif()

project(MinecraftClone)

# Glob all .cpp files recursively
file(GLOB_RECURSE MY_SOURCES CONFIGURE_DEPENDS "${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp")

# Check if MY_SOURCES is empty
if(NOT MY_SOURCES)
    message(FATAL_ERROR "No source files found in ${CMAKE_CURRENT_SOURCE_DIR}/src/")
endif()

# Add the executable target
add_executable(${CMAKE_PROJECT_NAME})

# Set C++ standard for the target
set_property(TARGET ${CMAKE_PROJECT_NAME} PROPERTY CXX_STANDARD 20)

# Add sources to the target
target_sources(${CMAKE_PROJECT_NAME} PRIVATE ${MY_SOURCES})

# Additional MSVC-specific settings
if(MSVC)
    target_compile_definitions(${CMAKE_PROJECT_NAME} PUBLIC _CRT_SECURE_NO_WARNINGS)

    set_target_properties(${CMAKE_PROJECT_NAME} PROPERTIES
        LINK_FLAGS "/SUBSYSTEM:WINDOWS /ENTRY:mainCRTStartup" # No console window
    )
endif()

# Include directories
target_include_directories(${CMAKE_PROJECT_NAME} PUBLIC 
    "${CMAKE_CURRENT_SOURCE_DIR}/src/include/"
    "${CMAKE_CURRENT_SOURCE_DIR}/Dependencies/GLAD/include/"
    "${CMAKE_CURRENT_SOURCE_DIR}/Dependencies/GLFW/include/"
    "${CMAKE_CURRENT_SOURCE_DIR}/Dependencies/glm/"
    "${CMAKE_CURRENT_SOURCE_DIR}/Dependencies/glm/gtc/"
    "${CMAKE_CURRENT_SOURCE_DIR}/Dependencies/STB/include/"
)
